<!--
// (C) Copyright 2014 by Autodesk, Inc.
//
// Permission to use, copy, modify, and distribute this software in
// object code form for any purpose and without fee is hereby granted, 
// provided that the above copyright notice appears in all copies and 
// that both that copyright notice and the limited warranty and
// restricted rights notice below appear in all supporting 
// documentation.
//
// AUTODESK PROVIDES THIS PROGRAM "AS IS" AND WITH ALL FAULTS. 
// AUTODESK SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTY OF
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR USE.  AUTODESK, INC. 
// DOES NOT WARRANT THAT THE OPERATION OF THE PROGRAM WILL BE
// UNINTERRUPTED OR ERROR FREE.

//- Written by Cyrille Fauvel, Autodesk Developer Network (ADN)
//- http://www.autodesk.com/joinadn
//- December 30th, 2013
//
-->

<!--
	http://msdn.microsoft.com/en-us/library/vstudio/ms745107(v=vs.90).aspx
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:local="clr-namespace:Autodesk.Maya"
					>

	<!-- Converters -->
	<local:BooleanToDoubleConverter x:Key="BooleanToDoubleConverter" />
	<local:ProgressBarValueConverter x:Key="ProgressBarValueConverter" />
	<local:ProgressBarPercentageConverter x:Key="ProgressBarPercentageConverter" />
	<local:PositionConverter x:Key="PositionConverter" />
	<local:Rect2Converter x:Key="Rect2Converter" />
	<local:RectConverter x:Key="RectConverter" />

	<!-- Main Colors - QadskDarkStyle::standardPalette -->

	<!-- Active -->
	<Color x:Key="Base">#FF2A2A2A</Color>
	<Color x:Key="AlternateBase">#FF2E2E2E</Color>
	<!-- base.lighter (110) -->
	<Color x:Key="Window">#FF444444</Color>
	<Color x:Key="Text">#FFC8C8C8</Color>
	<Color x:Key="BrightText">#FF252525</Color>
	<Color x:Key="Button">#FF646464</Color>
	<Color x:Key="Border">#FF292929</Color>
	<Color x:Key="Light">#FF616161</Color>
	<Color x:Key="Midlight">#FF3B3B3B</Color>
	<Color x:Key="Mid">#FF2D2D2D</Color>
	<Color x:Key="Dark">#FF252525</Color>
	<Color x:Key="Shadow">#FF000000</Color>
	<!-- Disabled -->
	<Color x:Key="ButtonDisabled">#FF505050</Color>
	<Color x:Key="TextDisabled">#FF808080</Color>
	<!-- base.lighter (250) -->
	<!-- Inactive - same as Active -->
	<!-- Others -->
	<Color x:Key="fSelectedToolButtonColor">#FFAFAFAF</Color>
	<Color x:Key="fPanelFocusRectColor">#FF828282</Color>

	<Color x:Key="baseGradientStartColor">#FF676767</Color>
	<!-- base.dark (101) -->
	<Color x:Key="baseGradientStopColor">#FF575757</Color>
	<Color x:Key="buttonPressedGradientStartColor">#FF595959</Color>
	<Color x:Key="buttonPressedGradientStopColor">#FF5B5B5B</Color>
	<Color x:Key="buttonDisabledGradientStartColor">#FF505050</Color>
	<Color x:Key="buttonDisabledGradientStopColor">#FF4A4A4A</Color>
	<Color x:Key="highlightedBaseGradientStartColor">#FF656769</Color>
	<Color x:Key="highlightedBaseGradientStopColor">#FF5D5F61</Color>
	<Color x:Key="checkBoxGradientStartColor">#FF2E3134</Color>
	<Color x:Key="checkBoxGradientStopColor">#FF38424B</Color>
	<Color x:Key="checkBoxHoverTopLeft1">#FF657E96</Color>
	<Color x:Key="checkBoxHoverBottomRight1">#FF5C7288</Color>
	<Color x:Key="checkBoxHoverTopLeft2">#FF657584</Color>
	<Color x:Key="checkBoxHoverBottomRight2">#FF5C6A78</Color>
	<Color x:Key="editBoxBorder">#FF363636</Color>
	<Color x:Key="editBoxFocus1">#FF607F9C</Color>
	<Color x:Key="editBoxFocus2">#FF52718E</Color>
	<Color x:Key="scrollbarStartColor">#FF6D6D6D</Color>
	<Color x:Key="scrollbarStopColor">#FF5F5F5F</Color>
	<Color x:Key="scrollbarPressedStopColor">#FF5F5F5F</Color>
	<Color x:Key="listboxItemSelected">#FF678DB2</Color>
	<Color x:Key="listboxItemDisabledSelected">#FF567594</Color>
	<Color x:Key="tabItemStopColor">#FF3F3F3F</Color>
	<Color x:Key="tabItemBorderStopColor">#FF4B5257</Color>
	<Color x:Key="tooltips">#FFFFFFDC</Color>

	<Color x:Key="ActiveHover1">#FF68839E</Color>
	<Color x:Key="ActiveHover2">#FF66798A</Color>
	<Color x:Key="ActiveNoHover">#FF324577</Color>
	<Color x:Key="InactiveHover">#FF838383</Color>
	<Color x:Key="InactiveNoHover">#FF5E5E5E</Color>

	<!-- Brush -->
	<SolidColorBrush x:Key="BaseBrush" Color="{StaticResource Base}" />
	<SolidColorBrush x:Key="WindowBrush" Color="{StaticResource Window}" />
	<SolidColorBrush x:Key="TextBrush" Color="{StaticResource Text}" />
	<SolidColorBrush x:Key="TextDisabledBrush" Color="{StaticResource TextDisabled}" />
	<SolidColorBrush x:Key="ButtonColorBrush" Color="{StaticResource Button}" />
	<SolidColorBrush x:Key="BorderBrush" Color="{StaticResource Border}" />
	<SolidColorBrush x:Key="LightBrush" Color="{StaticResource Light}" />
	<SolidColorBrush x:Key="DarkBrush" Color="{StaticResource Dark}" />
	<SolidColorBrush x:Key="ButtonDisabledSolidBrush" Color="{StaticResource ButtonDisabled}" />

	<SolidColorBrush x:Key="ActiveHoverBrush1" Color="{StaticResource ActiveHover1}" />
	<SolidColorBrush x:Key="ActiveHoverBrush2" Color="{StaticResource ActiveHover2}" />
	<SolidColorBrush x:Key="ActiveNoHoverBrush" Color="{StaticResource ActiveNoHover}" />
	<SolidColorBrush x:Key="InactiveNoHoverBrush" Color="{StaticResource InactiveNoHover}" />
	<SolidColorBrush x:Key="baseGradientStopColorBrush" Color="{StaticResource baseGradientStopColor}" />
	<SolidColorBrush x:Key="buttonPressedGradientStartColorBrush" Color="{StaticResource buttonPressedGradientStartColor}" />
	<SolidColorBrush x:Key="checkBoxHoverTopLeft1Brush" Color="{StaticResource checkBoxHoverTopLeft1}" />
	<SolidColorBrush x:Key="checkBoxHoverBottomRight1Brush" Color="{StaticResource checkBoxHoverBottomRight1}" />
	<SolidColorBrush x:Key="checkBoxHoverTopLeft2Brush" Color="{StaticResource checkBoxHoverTopLeft2}" />
	<SolidColorBrush x:Key="checkBoxHoverBottomRight2Brush" Color="{StaticResource checkBoxHoverBottomRight2}" />
	<SolidColorBrush x:Key="radioBoxBorder1Brush" Color="{StaticResource buttonDisabledGradientStopColor}" />
	<SolidColorBrush x:Key="radioBoxBorder2Brush" Color="{StaticResource Base}" />
	<SolidColorBrush x:Key="editBoxBorderBrush" Color="{StaticResource editBoxBorder}" />
	<SolidColorBrush x:Key="editBoxFocus1Brush" Color="{StaticResource editBoxFocus1}" />
	<SolidColorBrush x:Key="editBoxFocus2Brush" Color="{StaticResource editBoxFocus2}" />
	<SolidColorBrush x:Key="scrollbarStartColorBrush" Color="{StaticResource scrollbarStartColor}" />
	<SolidColorBrush x:Key="scrollbarStopColorBrush" Color="{StaticResource scrollbarStopColor}" />
	<SolidColorBrush x:Key="listboxItemSelectedBrush" Color="{StaticResource listboxItemSelected}" />
	<SolidColorBrush x:Key="listboxItemDisabledSelectedBrush" Color="{StaticResource listboxItemDisabledSelected}" />
	<SolidColorBrush x:Key="tooltipsBrush" Color="{StaticResource tooltips}" />

	<LinearGradientBrush x:Key="ButtonBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource baseGradientStartColor}" Offset="0.0" />
		<GradientStop Color="{StaticResource baseGradientStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ButtonPressedBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource buttonPressedGradientStartColor}" Offset="0.0" />
		<GradientStop Color="{StaticResource buttonPressedGradientStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ButtonDisabledBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource buttonDisabledGradientStartColor}" Offset="0.0" />
		<GradientStop Color="{StaticResource buttonDisabledGradientStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="CheckBoxHoverBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource checkBoxGradientStartColor}" Offset="0.0" />
		<GradientStop Color="{StaticResource checkBoxGradientStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ScrollbarBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource scrollbarStartColor}" Offset="0.0" />
		<GradientStop Color="{StaticResource scrollbarStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ScrollbarPressedBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource Button}" Offset="0.0" />
		<GradientStop Color="{StaticResource scrollbarPressedStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="TabItemUnselectedBrush" StartPoint="0,0" EndPoint="0,1">
		<GradientStop Color="{StaticResource Window}" Offset="0.0" />
		<GradientStop Color="{StaticResource tabItemStopColor}" Offset="1.0" />
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="TabItemTopBorderBrush" StartPoint="0,0" EndPoint="1,0">
		<GradientStop Color="{StaticResource Window}" Offset="0.0" />
		<GradientStop Color="{StaticResource tabItemBorderStopColor}" Offset="1.0" />
	</LinearGradientBrush>

	<!-- BitmapImage x:Key="ScrollbarGrip" UriSource="Resources/grip.png" /-->
	<!-- Image x:Name="ScrollbarGrip" Stretch="None" Source="Resources/grip.png" /-->
	<ImageBrush x:Key="ScrollbarGrip" ViewportUnits="Absolute" Viewport="0,0,10,18" TileMode="Tile" Stretch="Uniform" ImageSource="/MayaTheme;component/Resources/grip.png" />
	<ImageBrush x:Key="ProgressBarBrush" ViewportUnits="Absolute" Viewport="0,0,20,14" TileMode="Tile" Stretch="Uniform" ImageSource="/MayaTheme;component/Resources/progress.png" />
	<DropShadowBitmapEffect x:Key="DropDownShadow" Color="{StaticResource Base}" Direction="315" ShadowDepth="4" Softness="0.15" Opacity="0.35" />
	<BitmapImage x:Key="ArrowDown" UriSource="/MayaTheme;component/Resources/arrowdown.png" />
	<BitmapImage x:Key="ArrowLeft" UriSource="/MayaTheme;component/Resources/arrowleft.png" />

	<ScaleTransform x:Key="FontStretchExpanded" ScaleX="1.2" />

	<!-- All controls -->
	<Style TargetType="Control" x:Key="CommonStyle">
		<Setter Property="Background" Value="{DynamicResource WindowBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="FontFamily" Value="Tahoma" />
		<Setter Property="FontSize" Value="11" />
		<Setter Property="FontWeight" Value="Light" />
		<Setter Property="FontStretch" Value="Expanded" />
		<!-- Setter Property="LayoutTransform" Value="{DynamicResource FontStretchExpanded}" / -->
		<Setter Property="FontStyle" Value="Normal" />
	</Style>

	<!-- Form / Buggy, instead add Background="{DynamicResource WindowBrush}" to your xaml wpf form -->
	<!-- <Style TargetType="{x:Type Window}" BasedOn="{StaticResource CommonStyle}"> -->
	<Style x:Key="MayaStyle" TargetType="{x:Type Window}">
		<Setter Property="Background" Value="{DynamicResource WindowBrush}" />
		<!-- Icon - works only if a resource -->
		<Setter Property="Icon" Value="/MayaTheme;component/Resources/maya.ico" />
	</Style>

	<!-- Separator -->
	<Style TargetType="{x:Type Separator}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Height" Value="1" />
		<Setter Property="Margin" Value="2,0,2,0" />
		<Setter Property="Background" Value="{DynamicResource editBoxBorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border Background="{x:Null}" BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding Height}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- GroupBox -->
	<ControlTemplate x:Key="GroupBoxTemplate" TargetType="{x:Type GroupBox}">
		<Grid SnapsToDevicePixels="True">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="2" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="2" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="2" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="2" />
				<RowDefinition Height="2" />
				<RowDefinition Height="*" />
				<RowDefinition Height="2" />
			</Grid.RowDefinitions>
			<Border x:Name="ContentBorder" Grid.Row="3" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource BaseBrush}" Background="{DynamicResource WindowBrush}" CornerRadius="0" />
			<Border x:Name="ContentBorder1" Grid.Row="3" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource LightBrush}" CornerRadius="0" />
			<Border x:Name="ContentBorder2" Margin="1" Grid.Row="3" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource LightBrush}" CornerRadius="0" />
			<Border x:Name="ContentBorder3" Margin="1" Grid.Row="3" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource BaseBrush}" CornerRadius="0" />
			<Border x:Name="BackgroundNorm" Grid.ColumnSpan="4" Grid.RowSpan="3" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource LightBrush}" Background="{DynamicResource ButtonDisabledSolidBrush}" CornerRadius="0" />
			<Border x:Name="BackgroundNorm2" Grid.ColumnSpan="4" Grid.RowSpan="3" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource BaseBrush}" CornerRadius="0" />
			<Border x:Name="Header" Grid.Column="1" Grid.Row="1" Padding="4,1,0,2">
				<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" />
			</Border>
			<ContentPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="4" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" />
		</Grid>
	</ControlTemplate>
	<Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource GroupBoxTemplate}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- Label / TextBlock -->
	<ControlTemplate x:Key="LabelTemplate" TargetType="{x:Type Label}">
		<Border>
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type Label}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource LabelTemplate}" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!--Style TargetType="{x:Type TextBlock}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style-->
	<!-- Button -->
	<ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="Grid">
			<Border x:Name="BorderAndBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" />
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
			<Grid x:Name="MouseOverGrid" Opacity="0">
				<Border BorderThickness="0,1,0,1" Margin="1" BorderBrush="{DynamicResource ActiveHoverBrush1}" CornerRadius="3" />
				<Border BorderThickness="0,1,0,1" Margin="2" BorderBrush="{DynamicResource ActiveHoverBrush2}" CornerRadius="3" />
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{DynamicResource ButtonPressedBrush}" />
				<Setter Property="Padding" Value="7,1,5,-1" />
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="0" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{DynamicResource ButtonDisabledBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="0" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type Button}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource ButtonTemplate}" />
		<Setter Property="Background" Value="{DynamicResource ButtonBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="25" />
		<Setter Property="Padding" Value="6,0,6,0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- CheckBox -->
	<ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
		<BulletDecorator x:Name="bulletDecorator" Background="Transparent">
			<BulletDecorator.Bullet>
				<Grid x:Name="Grid">
					<Border x:Name="BorderAndBackground" Width="13" Height="13" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="1">
						<Path x:Name="CheckMark" RenderOptions.EdgeMode="Aliased" Width="11" Height="11" SnapsToDevicePixels="False" StrokeThickness="2" Stroke="{DynamicResource TextBrush}" Data="M 0 5 L 4 9 M 4 8 L 12 0">
							<Path.Clip>
								<RectangleGeometry Rect="1,1,9,9" />
							</Path.Clip>
						</Path>
					</Border>
					<Grid x:Name="MouseOverGrid" Opacity="0">
						<Border BorderThickness="1,1,0,0" Margin="1" BorderBrush="{DynamicResource checkBoxHoverTopLeft1Brush}" CornerRadius="0" />
						<Border BorderThickness="1,1,0,0" Margin="2" BorderBrush="{DynamicResource checkBoxHoverTopLeft2Brush}" CornerRadius="0" />
						<Border BorderThickness="0,0,1,1" Margin="1" BorderBrush="{DynamicResource checkBoxHoverBottomRight1Brush}" CornerRadius="0" />
						<Border BorderThickness="0,0,1,1" Margin="2" BorderBrush="{DynamicResource checkBoxHoverBottomRight2Brush}" CornerRadius="0" />
					</Grid>
				</Grid>
			</BulletDecorator.Bullet>
			<ContentPresenter Margin="5,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
		</BulletDecorator>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource CheckBoxHoverBrush}" />
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsChecked" Value="False">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="{x:Null}">
				<Setter TargetName="CheckMark" Property="Data" Value="M 0 11 L 11 0" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="CheckMark" Property="Stroke" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="0" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource CheckBoxTemplate}" />
		<Setter Property="BorderBrush" Value="{DynamicResource DarkBrush}" />
		<Setter Property="Background" Value="{DynamicResource BorderBrush}" />
		<Setter Property="Height" Value="13" />
		<!-- Setter Property="Width" Value="13" / -->
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- RadioButton -->
	<ControlTemplate x:Key="RadioButtonTemplate" TargetType="{x:Type RadioButton}">
		<BulletDecorator x:Name="bulletDecorator" Background="Transparent">
			<BulletDecorator.Bullet>
				<Grid x:Name="Grid" Width="13" Height="13">
					<Ellipse x:Name="Background1" Height="13" Width="13" Fill="{DynamicResource BorderBrush}" Stroke="{DynamicResource radioBoxBorder1Brush}" StrokeThickness="1" />
					<Ellipse x:Name="Background2" Height="11" Width="11" Fill="{DynamicResource BorderBrush}" Stroke="{DynamicResource radioBoxBorder2Brush}" StrokeThickness="1" />
					<Ellipse x:Name="MouseOver" Height="11" Width="11" Visibility="Collapsed" Fill="{DynamicResource CheckBoxHoverBrush}" Stroke="{DynamicResource checkBoxHoverTopLeft1Brush}" StrokeThickness="1" />
					<Ellipse x:Name="CheckIcon" Height="7" Width="7" Fill="{DynamicResource TextBrush}" />
				</Grid>
			</BulletDecorator.Bullet>
			<ContentPresenter Margin="7,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
		</BulletDecorator>
		<ControlTemplate.Triggers>
			<!--Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="Background" Property="Stroke" Value="{DynamicResource CheckBoxHoverBrush}" />
			</Trigger-->
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="Background2" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="MouseOver" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsChecked" Value="False">
				<Setter TargetName="CheckIcon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="CheckIcon" Property="Fill" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource RadioButtonTemplate}" />
		<Setter Property="Height" Value="13" />
		<!-- Setter Property="Width" Value="13" / -->
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- TextBox -->
	<ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBox}">
		<Grid x:Name="Grid">
			<Border x:Name="Border" Background="{x:Null}" BorderBrush="{DynamicResource ButtonDisabledSolidBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			<Border x:Name="BorderAndBackground" Margin="1" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource editBoxBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			<Grid x:Name="FocusGrid" Opacity="0">
				<Border BorderBrush="{DynamicResource editBoxFocus1Brush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
				<Border Margin="1" BorderBrush="{DynamicResource editBoxFocus2Brush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			</Grid>
			<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Margin="2" />
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter TargetName="FocusGrid" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ButtonDisabledSolidBrush}" />
				<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource WindowBrush}" />
				<Setter TargetName="BorderAndBackground" Property="BorderBrush" Value="{DynamicResource radioBoxBorder1Brush}" />
			</Trigger>
			<!--Trigger Property="AcceptsReturn" Value="True">
				<Setter TargetName="PART_ContentHost" Property="Margin" Value="9,10,2,2" />
			</Trigger-->
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource TextBoxTemplate}" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="AllowDrop" Value="True" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="{DynamicResource BaseBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="20" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<!-- Setter Property="VerticalScrollBarVisibility" Value="Auto" / -->
		<!-- Setter Property="HorizontalScrollBarVisibility" Value="Auto" / -->
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- RichTextBox -->
	<ControlTemplate x:Key="RichTextBoxTemplate" TargetType="{x:Type RichTextBox}">
		<Grid x:Name="Grid">
			<Border x:Name="Border" Background="{x:Null}" BorderBrush="{DynamicResource ButtonDisabledSolidBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			<Border x:Name="BorderAndBackground" Margin="1" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource editBoxBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			<Grid x:Name="FocusGrid" Opacity="0">
				<Border BorderBrush="{DynamicResource editBoxFocus1Brush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
				<Border Margin="1" BorderBrush="{DynamicResource editBoxFocus2Brush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			</Grid>
			<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Margin="2" Focusable="False" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter TargetName="FocusGrid" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ButtonDisabledSolidBrush}" />
				<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource WindowBrush}" />
				<Setter TargetName="BorderAndBackground" Property="BorderBrush" Value="{DynamicResource radioBoxBorder1Brush}" />
			</Trigger>
			<!--Trigger Property="AcceptsReturn" Value="True">
				<Setter TargetName="PART_ContentHost" Property="Margin" Value="9,10,2,2" />
			</Trigger-->
			<!--MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
					<Condition Property="IsSelectionActive" Value="False"/>
				</MultiTrigger.Conditions>
				<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
			</MultiTrigger-->
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource CommonStyle}">
		<Style.Resources>
			<Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
				<Setter Property="OverridesDefaultStyle" Value="True" />
			</Style>
		</Style.Resources>
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource RichTextBoxTemplate}" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="AllowDrop" Value="True" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="{DynamicResource BaseBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<!--Setter Property="MinWidth" Value="10" /-->
		<!--Setter Property="Height" Value="Auto" /-->
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- PasswordBox -->
	<ControlTemplate x:Key="PasswordBoxTemplate" TargetType="{x:Type PasswordBox}">
		<Grid x:Name="Grid">
			<Border x:Name="Border" Background="{x:Null}" BorderBrush="{DynamicResource ButtonDisabledSolidBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			<Border x:Name="BorderAndBackground" Margin="1" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource editBoxBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			<Grid x:Name="FocusGrid" Opacity="0">
				<Border BorderBrush="{DynamicResource editBoxFocus1Brush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
				<Border Margin="1" BorderBrush="{DynamicResource editBoxFocus2Brush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			</Grid>
			<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Margin="2" />
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter TargetName="FocusGrid" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ButtonDisabledSolidBrush}" />
				<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource WindowBrush}" />
				<Setter TargetName="BorderAndBackground" Property="BorderBrush" Value="{DynamicResource radioBoxBorder1Brush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource PasswordBoxTemplate}" />
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="AllowDrop" Value="True" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="{DynamicResource BaseBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="20" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<!-- Setter Property="VerticalScrollBarVisibility" Value="Auto" / -->
		<!-- Setter Property="HorizontalScrollBarVisibility" Value="Auto" / -->
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- ScrollBar -->
	<DrawingBrush x:Key="CheckerBackground" Viewport="0,0,2,2" ViewportUnits="Absolute" Stretch="None" TileMode="Tile">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<GeometryDrawing Brush="{DynamicResource BaseBrush}">
					<GeometryDrawing.Geometry>
						<GeometryGroup>
							<RectangleGeometry Rect="0,0,1,1" />
							<RectangleGeometry Rect="1,1,1,1" />
						</GeometryGroup>
					</GeometryDrawing.Geometry>
				</GeometryDrawing>
				<GeometryDrawing Brush="{DynamicResource WindowBrush}">
					<GeometryDrawing.Geometry>
						<GeometryGroup>
							<RectangleGeometry Rect="1,0,1,1" />
							<RectangleGeometry Rect="0,1,1,1" />
						</GeometryGroup>
					</GeometryDrawing.Geometry>
				</GeometryDrawing>
			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>
	<DrawingBrush x:Key="GripBackground" Viewport="0,0,4,4" ViewportUnits="Absolute" Stretch="None" TileMode="Tile">
		<DrawingBrush.Drawing>
			<DrawingGroup>
				<GeometryDrawing Brush="{DynamicResource editBoxBorderBrush}">
					<GeometryDrawing.Geometry>
						<GeometryGroup>
							<RectangleGeometry Rect="0,0,1,2" />
							<RectangleGeometry Rect="1,0,1,1" />
						</GeometryGroup>
					</GeometryDrawing.Geometry>
				</GeometryDrawing>
				<GeometryDrawing Brush="{DynamicResource scrollbarStartColorBrush}">
					<GeometryDrawing.Geometry>
						<GeometryGroup>
							<RectangleGeometry Rect="1,1,1,1" />
						</GeometryGroup>
					</GeometryDrawing.Geometry>
				</GeometryDrawing>

			</DrawingGroup>
		</DrawingBrush.Drawing>
	</DrawingBrush>
	<Style x:Key="VerticalScrollBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="BorderBrush" Value="{DynamicResource DarkBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid SnapsToDevicePixels="True">
						<Rectangle x:Name="Ellipse" StrokeThickness="1" Stroke="{DynamicResource DarkBrush}" Fill="{DynamicResource ScrollbarBrush}" />
						<Border x:Name="Border1" Margin="1" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource scrollbarStartColorBrush}" Background="{x:Null}" />
						<Border x:Name="Border2" Margin="1" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource scrollbarStopColorBrush}" Background="{x:Null}" />
						<!--Border Width="10" Height="18" BorderBrush="{x:Null}" Background="{DynamicResource GripBackground}" HorizontalAlignment="Center" VerticalAlignment="Center" /-->
						<!--Image Source="{StaticResource ScrollbarGrip}" HorizontalAlignment="Center" VerticalAlignment="Center" /-->
						<!-- Image x:Name="ScrollbarGrip" Width="10" Height="18" Stretch="None" Source="/MayaTheme;component/Resources/grip.png" / -->
						<!--Border Width="10" Height="18" Background="{DynamicResource ScrollbarGrip}" /-->
						<Border Margin="-8,-16,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="0,-16,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="7,-16,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="-8,-8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="0,-8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="7,-8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="-8,0,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="0,0,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="7,0,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="-8,8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="0,8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="7,8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="-8,16,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="0,16,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="7,16,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDragging" Value="True">
							<Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource ScrollbarPressedBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource WindowBrush}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{DynamicResource baseGradientStopColorBrush}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{DynamicResource radioBoxBorder1Brush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HorizontalScrollBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="BorderBrush" Value="{DynamicResource DarkBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid SnapsToDevicePixels="True">
						<Rectangle x:Name="Ellipse" StrokeThickness="1" Stroke="{DynamicResource DarkBrush}" Fill="{DynamicResource ScrollbarBrush}" />
						<Border x:Name="Border1" Margin="1" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource scrollbarStartColorBrush}" Background="{x:Null}" />
						<Border x:Name="Border2" Margin="1" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource scrollbarStopColorBrush}" Background="{x:Null}" />
						<!--Border Width="10" Height="18" BorderBrush="{x:Null}" Background="{DynamicResource GripBackground}" HorizontalAlignment="Center" VerticalAlignment="Center" /-->
						<Border Margin="-16,-8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="-16,0,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="-16,7,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="-8,-8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="-8,0,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="-8,7,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="0,-8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="0,0,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="0,7,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="8,-8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="8,0,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="8,7,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="16,-8,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="16,0,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
						<Border Margin="16,7,0,0" Width="2" Height="2" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{DynamicResource scrollbarStartColorBrush}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDragging" Value="True">
							<Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource ScrollbarPressedBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Ellipse" Property="Fill" Value="{DynamicResource WindowBrush}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{DynamicResource baseGradientStopColorBrush}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{DynamicResource radioBoxBorder1Brush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonUpStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Height="16" SnapsToDevicePixels="True">
						<Border x:Name="BorderAndBackground" BorderThickness="1" BorderBrush="{DynamicResource DarkBrush}" Background="{DynamicResource ScrollbarBrush}" CornerRadius="2" />
						<Border x:Name="Border1" Margin="1" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource scrollbarStartColorBrush}" Background="{x:Null}" CornerRadius="1" />
						<Border x:Name="Border2" Margin="1" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource scrollbarStopColorBrush}" Background="{x:Null}" CornerRadius="1" />
						<Path x:Name="Path" Stretch="None" RenderOptions.EdgeMode="Aliased" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource TextBrush}" Data="M 0 2 L 4 -2 L 8 2 Z" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource ScrollbarPressedBrush}" />
							<Setter TargetName="Path" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform X="1" Y="1" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Path" Property="Fill" Value="{DynamicResource TextDisabledBrush}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource WindowBrush}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{DynamicResource baseGradientStopColorBrush}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{DynamicResource radioBoxBorder1Brush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonDownStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Height="16" SnapsToDevicePixels="True">
						<Border x:Name="BorderAndBackground" BorderThickness="1" BorderBrush="{DynamicResource DarkBrush}" Background="{DynamicResource ScrollbarBrush}" CornerRadius="2" />
						<Border x:Name="Border1" Margin="1" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource scrollbarStartColorBrush}" Background="{x:Null}" CornerRadius="1" />
						<Border x:Name="Border2" Margin="1" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource scrollbarStopColorBrush}" Background="{x:Null}" CornerRadius="1" />
						<Path x:Name="Path" Stretch="None" RenderOptions.EdgeMode="Aliased" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource TextBrush}" Data="M 0 -2 L 4 2 L 8 -2 Z" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource ScrollbarPressedBrush}" />
							<Setter TargetName="Path" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform X="1" Y="1" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Path" Property="Fill" Value="{DynamicResource TextDisabledBrush}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource WindowBrush}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{DynamicResource baseGradientStopColorBrush}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{DynamicResource radioBoxBorder1Brush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonLeftStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Width="16" SnapsToDevicePixels="True">
						<Border x:Name="BorderAndBackground" BorderThickness="1" BorderBrush="{DynamicResource DarkBrush}" Background="{DynamicResource ScrollbarBrush}" CornerRadius="2" />
						<Border x:Name="Border1" Margin="1" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource scrollbarStartColorBrush}" Background="{x:Null}" CornerRadius="1" />
						<Border x:Name="Border2" Margin="1" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource scrollbarStopColorBrush}" Background="{x:Null}" CornerRadius="1" />
						<Path x:Name="Path" Stretch="None" RenderOptions.EdgeMode="Aliased" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource TextBrush}" Data="M 2 -1 L -2 2 L 2 6 Z" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource ScrollbarPressedBrush}" />
							<Setter TargetName="Path" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform X="1" Y="1" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Path" Property="Fill" Value="{DynamicResource TextDisabledBrush}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource WindowBrush}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{DynamicResource baseGradientStopColorBrush}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{DynamicResource radioBoxBorder1Brush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LineButtonRightStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Width="16" SnapsToDevicePixels="True">
						<Border x:Name="BorderAndBackground" BorderThickness="1" BorderBrush="{DynamicResource DarkBrush}" Background="{DynamicResource ScrollbarBrush}" CornerRadius="2" />
						<Border x:Name="Border1" Margin="1" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource scrollbarStartColorBrush}" Background="{x:Null}" CornerRadius="1" />
						<Border x:Name="Border2" Margin="1" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource scrollbarStopColorBrush}" Background="{x:Null}" CornerRadius="1" />
						<Path x:Name="Path" Stretch="None" RenderOptions.EdgeMode="Aliased" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource TextBrush}" Data="M -2 -2 L 2 3 L -2 6 Z" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource ScrollbarPressedBrush}" />
							<Setter TargetName="Path" Property="RenderTransform">
								<Setter.Value>
									<TranslateTransform X="1" Y="1" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Path" Property="Fill" Value="{DynamicResource TextDisabledBrush}" />
							<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource WindowBrush}" />
							<Setter TargetName="Border1" Property="BorderBrush" Value="{DynamicResource baseGradientStopColorBrush}" />
							<Setter TargetName="Border2" Property="BorderBrush" Value="{DynamicResource radioBoxBorder1Brush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<!-- Border BorderThickness="1" BorderBrush="{DynamicResource DarkBrush}" Background="Transparent" / -->
					<Border Background="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid Background="{DynamicResource CheckerBackground}">
			<Grid.RowDefinitions>
				<RowDefinition MaxHeight="16" />
				<RowDefinition Height="*" />
				<RowDefinition MaxHeight="16" />
				<RowDefinition MaxHeight="16" />
			</Grid.RowDefinitions>
			<RepeatButton Grid.Row="0" Style="{DynamicResource LineButtonUpStyle}" Command="ScrollBar.LineUpCommand" />
			<Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True" ViewportSize="NaN">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="ScrollBar.PageUpCommand" Style="{DynamicResource ScrollBarPageButtonStyle}" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb MinHeight="26" Style="{DynamicResource VerticalScrollBarThumbStyle}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="ScrollBar.PageDownCommand" Style="{DynamicResource ScrollBarPageButtonStyle}" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton Grid.Row="2" Style="{DynamicResource LineButtonUpStyle}" Command="ScrollBar.LineUpCommand" />
			<RepeatButton Grid.Row="3" Style="{DynamicResource LineButtonDownStyle}" Command="ScrollBar.LineDownCommand" />
		</Grid>
	</ControlTemplate>
	<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
		<Grid Background="{DynamicResource CheckerBackground}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition MaxWidth="16"></ColumnDefinition>
				<ColumnDefinition Width="*"></ColumnDefinition>
				<ColumnDefinition MaxWidth="16"></ColumnDefinition>
				<ColumnDefinition MaxWidth="16"></ColumnDefinition>
			</Grid.ColumnDefinitions>
			<RepeatButton Grid.Column="0" Style="{DynamicResource LineButtonLeftStyle}" Command="ScrollBar.LineLeftCommand" />
			<Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False" ViewportSize="NaN">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="ScrollBar.PageLeftCommand" Style="{DynamicResource ScrollBarPageButtonStyle}" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb MinWidth="26" Style="{DynamicResource HorizontalScrollBarThumbStyle}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="ScrollBar.PageRightCommand" Style="{DynamicResource ScrollBarPageButtonStyle}" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton Grid.Column="2" Style="{DynamicResource LineButtonLeftStyle}" Command="ScrollBar.LineLeftCommand" />
			<RepeatButton Grid.Column="3" Style="{DynamicResource LineButtonRightStyle}" Command="ScrollBar.LineRightCommand" />
		</Grid>
	</ControlTemplate>
	<Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="16" />
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Template" Value="{DynamicResource VerticalScrollBar}" />
			</Trigger>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="Height" Value="16" />
				<Setter Property="Template" Value="{DynamicResource HorizontalScrollBar}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<!-- Slider -->
	<Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Image x:Name="SliderGrip" Width="11" Height="15" Stretch="Uniform" Source="/MayaTheme;component/Resources/slider.png">
						<Image.RenderTransform>
							<RotateTransform CenterX="5.5" CenterY="7.5" Angle="-90" />
						</Image.RenderTransform>
					</Image>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="SliderGrip" Property="Source" Value="/MayaTheme;component/Resources/slideroff.png" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Image x:Name="SliderGrip" Width="11" Height="15" Stretch="Uniform" Source="/MayaTheme;component/Resources/slider.png" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="SliderGrip" Property="Source" Value="/MayaTheme;component/Resources/slideroff.png" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SliderPageButtonStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
		<Grid x:Name="GridRoot" Background="Transparent">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TickBar x:Name="TopTick" Grid.Column="0" Visibility="Hidden" Width="4" SnapsToDevicePixels="True" Placement="Left" Fill="Transparent" />
			<Border x:Name="Border" Grid.Column="1" Margin="0" Width="4" Background="Transparent" BorderThickness="1" BorderBrush="{DynamicResource DarkBrush}" CornerRadius="2" />
			<Track x:Name="PART_Track" Grid.Column="1">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="Slider.DecreaseLarge" Style="{DynamicResource SliderPageButtonStyle}" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{DynamicResource VerticalSliderThumbStyle}" Background="{x:Null}" Foreground="{x:Null}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="Slider.IncreaseLarge" Style="{DynamicResource SliderPageButtonStyle}" />
				</Track.IncreaseRepeatButton>
			</Track>
			<TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Hidden" Width="4" SnapsToDevicePixels="True" Placement="Right" Fill="Transparent" />
		</Grid>
	</ControlTemplate>
	<ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
		<Grid x:Name="GridRoot" Background="Transparent">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<TickBar x:Name="TopTick" Grid.Row="0" Visibility="Hidden" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="Transparent" />
			<Border x:Name="Border" Grid.Row="1" Margin="0" Height="4" Background="Transparent" BorderThickness="1" BorderBrush="{DynamicResource DarkBrush}" CornerRadius="2" />
			<Track x:Name="PART_Track" Grid.Row="1">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="Slider.DecreaseLarge" Style="{DynamicResource SliderPageButtonStyle}" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb Style="{DynamicResource HorizontalSliderThumbStyle}" Background="{x:Null}" Foreground="{x:Null}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="Slider.IncreaseLarge" Style="{DynamicResource SliderPageButtonStyle}" />
				</Track.IncreaseRepeatButton>
			</Track>
			<TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Hidden" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="Transparent" />
		</Grid>
	</ControlTemplate>
	<Style TargetType="{x:Type Slider}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<!--Setter Property="Width" Value="16" />
				<Setter Property="Height" Value="Auto" /-->
				<Setter Property="MinWidth" Value="21" />
				<!--Setter Property="MinHeight" Value="104" /-->
				<Setter Property="Template" Value="{DynamicResource VerticalSlider}" />
			</Trigger>
			<Trigger Property="Orientation" Value="Horizontal">
				<!--Setter Property="Width" Value="Auto" />
				<Setter Property="Height" Value="16" /-->
				<!--Setter Property="MinWidth" Value="104" /-->
				<Setter Property="MinHeight" Value="21" />
				<Setter Property="Template" Value="{DynamicResource HorizontalSlider}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<!-- ListBox -->
	<Style x:Key="MayaScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />
						<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" />
						<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource MayaScrollViewer}" />
	<ControlTemplate x:Key="ListBoxTemplate" TargetType="{x:Type ListBox}">
		<Grid>
			<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource BaseBrush}" CornerRadius="2" />
			<Border Margin="1" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource editBoxBorderBrush}" Background="{x:Null}" CornerRadius="2" />
			<Border Margin="1" BorderThickness="0,0,1,1"  BorderBrush="{DynamicResource BorderBrush}" Background="{x:Null}" CornerRadius="2" />
			<Grid x:Name="FocusGrid" Opacity="0">
				<Border BorderBrush="{DynamicResource editBoxFocus1Brush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="2" />
				<Border Margin="1" BorderBrush="{DynamicResource editBoxFocus2Brush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="2" />
			</Grid>
			<ScrollViewer Margin="2" Style="{DynamicResource MayaScrollViewer}" Focusable="False" Background="{x:Null}" BorderThickness="0">
				<StackPanel Margin="0" IsItemsHost="True" />
			</ScrollViewer>
		</Grid>
		<ControlTemplate.Triggers>
			<!--Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource BaseBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
			</Trigger-->
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter TargetName="FocusGrid" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsGrouping" Value="True">
				<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource ListBoxTemplate}" />
		<Setter Property="Background" Value="{DynamicResource BaseBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<ControlTemplate x:Key="ListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
		<Grid SnapsToDevicePixels="True">
			<Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{DynamicResource listboxItemSelectedBrush}" />
			<ContentPresenter x:Name="contentPresenter" Margin="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter TargetName="SelectedRectangle" Property="Opacity" Value="1" />
				<Setter Property="Foreground" Value="White" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="True" />
					<Condition Property="IsEnabled" Value="False" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter TargetName="SelectedRectangle" Property="Opacity" Value="1" />
					<Setter TargetName="SelectedRectangle" Property="Fill" Value="{DynamicResource listboxItemDisabledSelectedBrush}" />
					<Setter Property="Foreground" Value="White" />
				</MultiTrigger.Setters>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ListBoxItem}" d:IsControlPart="True" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource ListBoxItemTemplate}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
	</Style>
	<!-- ComboBox -->
	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Grid x:Name="Grid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>
			<Border x:Name="BorderAndBackground" Grid.ColumnSpan="2" Width="Auto" Height="Auto" Background="{DynamicResource ButtonBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="2" />
			<Path x:Name="Arrow" Grid.Column="1" Width="15" Height="Auto" RenderOptions.EdgeMode="Aliased" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource TextBrush}" Data="M 4 -1 L 8 3 L 12 -1 Z" />
			<Grid x:Name="MouseOverGrid" Grid.ColumnSpan="2" Opacity="0">
				<Border BorderThickness="0,1,0,1" Margin="1" BorderBrush="{DynamicResource ActiveHoverBrush1}" CornerRadius="2" />
				<Border BorderThickness="0,1,0,1" Margin="2" BorderBrush="{DynamicResource ActiveHoverBrush2}" CornerRadius="2" />
			</Grid>
			<Border Grid.Column="1" Width="15" Height="Auto" Opacity="0.5" Background="{x:Null}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1,0,0,0" CornerRadius="0" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter TargetName="MouseOverGrid" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="True">
				<Setter Property="Background" Value="{DynamicResource ButtonPressedBrush}" />
				<Setter TargetName="Arrow" Property="RenderTransform">
					<Setter.Value>
						<TranslateTransform X="1" Y="1" />
					</Setter.Value>
				</Setter>

			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="BorderAndBackground" Property="Background" Value="{DynamicResource ButtonDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
		<ControlTemplate.Triggers>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="Grid">
			<ToggleButton x:Name="ToggleButton" Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
			<ContentPresenter x:Name="ContentSite" Margin="3,3,23,3" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />
			<TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" Style="{x:Null}" Margin="3,3,23,3" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" Background="{DynamicResource BaseBrush}" IsReadOnly="{TemplateBinding IsReadOnly}" BorderBrush="{DynamicResource BorderBrush}" Foreground="{DynamicResource TextBrush}" />
			<Popup x:Name="Popup" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
				<Grid x:Name="DropDown" Margin="0,0,4,4" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True">
					<Border x:Name="DropDownBorder" BitmapEffect="{DynamicResource DropDownShadow}" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource BaseBrush}" BorderThickness="1" CornerRadius="3" />
					<Border Margin="1" Background="{x:Null}" BorderBrush="{DynamicResource WindowBrush}" BorderThickness="1" CornerRadius="3" />
					<ScrollViewer Margin="2" Style="{DynamicResource MayaScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}">
						<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
					</ScrollViewer>
				</Grid>
			</Popup>
			<!--Grid.BitmapEffect>
				<DropShadowBitmapEffect x:Name="DropDownShadow" Color="Black" Direction="315" ShadowDepth="1.5" Softness="0.15" Opacity="{Binding IsChecked, ElementName=ToggleButton, Converter={StaticResource BooleanToDoubleConverter}}" />
			</Grid.BitmapEffect-->
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="ItemsControl.HasItems" Value="False">
				<Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
			<Trigger Property="ItemsControl.IsGrouping" Value="True">
				<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
			</Trigger>
			<Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
				<Setter TargetName="DropDownBorder" Property="Margin" Value="0" />
			</Trigger>
			<Trigger Property="ComboBox.IsEditable" Value="True">
				<Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
				<Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
				<Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
			</Trigger>
			<!--Trigger Property="Popup.IsOpen" Value="True"-->
			<!--Setter TargetName="DropDownShadow" Property="Opacity" Value="1" /-->
			<!--Trigger Property="ToggleButton.IsChecked" Value="True">
				<Setter TargetName="DropDownBorder" Property="BitmapEffect" Value="{DynamicResource DropDownShadow}" />
			</Trigger-->
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource ComboBoxTemplate}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="{DynamicResource ButtonBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="20" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<ControlTemplate x:Key="ComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
		<Grid x:Name="Grid" Background="{TemplateBinding Background}">
			<Rectangle x:Name="HoverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{DynamicResource listboxItemSelectedBrush}" />
			<ContentPresenter x:Name="contentPresenter" Margin="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="White" />
				<Setter TargetName="HoverRectangle" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="UIElement.IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
			<Trigger Property="ComboBoxItem.IsHighlighted" Value="True">
				<Setter Property="Foreground" Value="White" />
				<Setter TargetName="HoverRectangle" Property="Opacity" Value="1" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ComboBoxItem}" d:IsControlPart="True" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource ComboBoxItemTemplate}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="{DynamicResource BaseBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- ProgressBar -->
	<ControlTemplate x:Key="ProgressBarTemplate" TargetType="{x:Type ProgressBar}">
		<Grid x:Name="GridRoot" SnapsToDevicePixels="True">
			<Border x:Name="PART_Track" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="2" />
			<Border Margin="1" Background="{x:Null}" BorderBrush="{DynamicResource ButtonColorBrush}" BorderThickness="1,1,0,0" CornerRadius="2" />
			<Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
				<Grid x:Name="Foreground">
					<Border x:Name="Indicator" Grid.ZIndex="96" Margin="2" Background="{DynamicResource ProgressBarBrush}" BorderThickness="0,1,0,1" BorderBrush="{DynamicResource checkBoxHoverTopLeft1Brush}" CornerRadius="2" />
					<Grid x:Name="Animation" ClipToBounds="True">
						<Border x:Name="PART_GlowRect" Margin="-40,0,0,0" Width="40" Background="{x:Null}" HorizontalAlignment="Left">
							<Border Margin="2" Background="{DynamicResource ProgressBarBrush}" BorderThickness="0,1,0,1" BorderBrush="{DynamicResource checkBoxHoverTopLeft1Brush}" CornerRadius="2" />
						</Border>
					</Grid>
				</Grid>
			</Decorator>
			<!--TextBlock x:Name="Text1" Grid.ZIndex="95" FontWeight="Bold" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ProgressBar}}, Path=Value, Converter={StaticResource ProgressBarValueConverter}}"-->
			<TextBlock x:Name="Text1" Grid.ZIndex="95" FontWeight="Bold" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center">
				<TextBlock.Text>
					<MultiBinding Converter="{StaticResource ProgressBarPercentageConverter}">
						<Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ProgressBar}}" Path="Value" />
						<Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ProgressBar}}" Path="Minimum" />
						<Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ProgressBar}}" Path="Maximum" />
					</MultiBinding>
				</TextBlock.Text>
			</TextBlock>
			<Border x:Name="BorderAndBackground" Grid.ZIndex="98" Opacity="0" Margin="1" Background="{DynamicResource BaseBrush}" BorderBrush="{x:Null}" BorderThickness="0" />
			<TextBlock x:Name="Text2" Grid.ZIndex="99" Foreground="{DynamicResource BaseBrush}" Width="{Binding ElementName=PART_Track, Path=ActualWidth}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center">
				<TextBlock.Text>
					<MultiBinding Converter="{StaticResource ProgressBarPercentageConverter}">
						<Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ProgressBar}}" Path="Value" />
						<Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ProgressBar}}" Path="Minimum" />
						<Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ProgressBar}}" Path="Maximum" />
					</MultiBinding>
				</TextBlock.Text>
				<TextBlock.Clip>
					<RectangleGeometry>
						<RectangleGeometry.Rect>
							<MultiBinding Converter="{StaticResource Rect2Converter}">
								<Binding ElementName="PART_Indicator" Path="ActualWidth" />
								<Binding ElementName="PART_Indicator" Path="ActualHeight" />
							</MultiBinding>
						</RectangleGeometry.Rect>
					</RectangleGeometry>
				</TextBlock.Clip>
			</TextBlock>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter TargetName="GridRoot" Property="LayoutTransform">
					<Setter.Value>
						<RotateTransform Angle="-90" />
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="BorderAndBackground" Property="Opacity" Value="0.37" />
				<Setter TargetName="Text1" Property="Opacity" Value="0.50" />
			</Trigger>
			<Trigger Property="IsIndeterminate" Value="False">
				<Setter TargetName="PART_GlowRect" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsIndeterminate" Value="True">
				<Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="Text1" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="Text2" Property="Visibility" Value="Collapsed" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource ProgressBarTemplate}" />
		<Setter Property="Height" Value="20" />
		<Setter Property="FontSize" Value="10" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- TabControl / TabItem -->
	<ControlTemplate x:Key="TabControlTemplate" TargetType="{x:Type TabControl}">
		<Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
			<Grid.ColumnDefinitions>
				<ColumnDefinition x:Name="ColumnDefinition0" />
				<ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition x:Name="RowDefinition0" Height="Auto" />
				<RowDefinition x:Name="RowDefinition1" Height="*" />
			</Grid.RowDefinitions>
			<Border x:Name="Border" Margin="1,0,0,-1" Grid.Column="0" Grid.Row="0" Grid.ZIndex="99" Background="{x:Null}" CornerRadius="0">
				<TabPanel x:Name="HeaderPanel" IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
					<TabPanel.LayoutTransform>
						<TransformGroup>
							<ScaleTransform ScaleX="1" ScaleY="1" />
							<SkewTransform AngleX="0" AngleY="0" />
							<RotateTransform Angle="0" />
							<TranslateTransform X="0" Y="0" />
						</TransformGroup>
					</TabPanel.LayoutTransform>
					<TabPanel.RenderTransform>
						<TransformGroup>
							<ScaleTransform ScaleX="1" ScaleY="1" />
							<SkewTransform AngleX="0" AngleY="0" />
							<RotateTransform />
							<TranslateTransform X="0" Y="0" />
						</TransformGroup>
					</TabPanel.RenderTransform>
				</TabPanel>
			</Border>
			<Border x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" BorderThickness="1,1,1,1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2">
				<ContentPresenter x:Name="PART_SelectedContentHost" Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="SelectedContent" HorizontalAlignment="Left" VerticalAlignment="Top" />
			</Border>
			<Border x:Name="BorderTopLeft" Margin="1" Grid.Column="0" Grid.Row="1" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource scrollbarStopColorBrush}" CornerRadius="2,2,2,2" />
			<Border x:Name="BorderBottomRight" Margin="1" Grid.Column="0" Grid.Row="1" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource radioBoxBorder1Brush}" CornerRadius="2,2,2,2" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="TabStripPlacement" Value="Bottom">
				<Setter TargetName="RowDefinition0" Property="Height" Value="*" />
				<Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
				<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
				<Setter TargetName="BorderTopLeft" Property="Grid.Row" Value="0" />
				<Setter TargetName="BorderBottomRight" Property="Grid.Row" Value="0" />
				<Setter TargetName="Border" Property="Grid.Row" Value="1" />
				<Setter TargetName="ContentPanel" Property="CornerRadius" Value="2,2,0,0" />
				<Setter TargetName="Border" Property="CornerRadius" Value="0,0,2,2" />
				<Setter TargetName="Border" Property="Margin" Value="1,-1,0,0" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Left">
				<Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
				<Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
				<Setter TargetName="RowDefinition0" Property="Height" Value="*" />
				<Setter TargetName="RowDefinition1" Property="Height" Value="0" />
				<Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
				<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
				<Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
				<Setter TargetName="BorderTopLeft" Property="Grid.Row" Value="0" />
				<Setter TargetName="BorderTopLeft" Property="Grid.Column" Value="1" />
				<Setter TargetName="BorderBottomRight" Property="Grid.Row" Value="0" />
				<Setter TargetName="BorderBottomRight" Property="Grid.Column" Value="1" />
				<Setter TargetName="Border" Property="Grid.Column" Value="0" />
				<Setter TargetName="Border" Property="Margin" Value="0,1,-1,0" />
				<Setter TargetName="Border" Property="CornerRadius" Value="0,2,2,0" />
				<Setter TargetName="ContentPanel" Property="Margin" Value="0,0,0,0" />
				<Setter TargetName="ContentPanel" Property="CornerRadius" Value="0,2,2,0" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Right">
				<Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
				<Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
				<Setter TargetName="RowDefinition0" Property="Height" Value="*" />
				<Setter TargetName="RowDefinition1" Property="Height" Value="0" />
				<Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
				<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
				<Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
				<Setter TargetName="BorderTopLeft" Property="Grid.Row" Value="0" />
				<Setter TargetName="BorderTopLeft" Property="Grid.Column" Value="0" />
				<Setter TargetName="BorderBottomRight" Property="Grid.Row" Value="0" />
				<Setter TargetName="BorderBottomRight" Property="Grid.Column" Value="0" />
				<Setter TargetName="Border" Property="Grid.Column" Value="1" />
				<Setter TargetName="Border" Property="CornerRadius" Value="0,2,2,0" />
				<Setter TargetName="Border" Property="Margin" Value="-1,1,0,0" />
				<Setter TargetName="ContentPanel" Property="CornerRadius" Value="2,0,0,2" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="BorderTopLeft" Property="Opacity" Value="0.25" />
				<Setter TargetName="BorderBottomRight" Property="Opacity" Value="0.25" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource TabControlTemplate}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseBrush}" />
		<Setter Property="Background" Value="{DynamicResource WindowBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
	</Style>
	<ControlTemplate x:Key="TabItemTemplate" TargetType="{x:Type TabItem}">
		<Grid x:Name="GridRoot" Height="{TemplateBinding Height}">
			<Grid.LayoutTransform>
				<TransformGroup>
					<ScaleTransform ScaleX="1" ScaleY="1" />
					<SkewTransform AngleX="0" AngleY="0" />
					<RotateTransform Angle="0" />
					<TranslateTransform X="0" Y="0" />
				</TransformGroup>
			</Grid.LayoutTransform>
			<Border x:Name="Border" BorderThickness="1,1,1,0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2,2,0,0" />
			<Border x:Name="BorderTop" Margin="1,4,1,0" Opacity="0" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource TabItemTopBorderBrush}" CornerRadius="0" />
			<Border x:Name="BorderTopLeft" Margin="0,1,0,0" Opacity="0" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource scrollbarStopColorBrush}" CornerRadius="2,2,0,0" />
			<Border x:Name="BorderRight" Margin="0" Opacity="0" BorderThickness="0,0,1,0" BorderBrush="{DynamicResource radioBoxBorder1Brush}" CornerRadius="2,2,0,0" />
			<Grid x:Name="MouseOverGrid" Opacity="0">
				<Border Margin="1,4,0,0" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource ActiveHoverBrush1}" CornerRadius="0" />
				<Border Margin="1,5,0,0" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource ActiveHoverBrush2}" CornerRadius="0" />
			</Grid>
			<Grid>
				<ContentPresenter x:Name="ContentSite" Margin="12,5,12,2" RecognizesAccessKey="True" ContentSource="Header" d:LayoutOverrides="Width, Height" HorizontalAlignment="Center" VerticalAlignment="Top" />
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="TabStripPlacement" Value="Left">
				<Setter TargetName="GridRoot" Property="LayoutTransform">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1" ScaleY="1" />
							<SkewTransform AngleX="0" AngleY="0" />
							<RotateTransform Angle="-90" />
							<TranslateTransform X="0" Y="0" />
						</TransformGroup>
					</Setter.Value>
				</Setter>
				<!--Setter TargetName="ContentSite" Property="Margin" Value="5,12,2,12" /-->
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Width" Value="21" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Right">
				<Setter TargetName="GridRoot" Property="LayoutTransform">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1" ScaleY="1" />
							<SkewTransform AngleX="0" AngleY="0" />
							<RotateTransform Angle="90" />
							<TranslateTransform X="0" Y="0" />
						</TransformGroup>
					</Setter.Value>
				</Setter>
				<!--Setter TargetName="ContentSite" Property="Margin" Value="2,12,5,12" /-->
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Width" Value="21" />
			</Trigger>
			<Trigger Property="TabStripPlacement" Value="Bottom">
				<Setter TargetName="ContentSite" Property="LayoutTransform">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1" ScaleY="1" />
							<SkewTransform AngleX="0" AngleY="0" />
							<RotateTransform Angle="180" />
							<TranslateTransform X="0" Y="0" />
						</TransformGroup>
					</Setter.Value>
				</Setter>
				<Setter TargetName="GridRoot" Property="LayoutTransform">
					<Setter.Value>
						<TransformGroup>
							<ScaleTransform ScaleX="1" ScaleY="1" />
							<SkewTransform AngleX="0" AngleY="0" />
							<RotateTransform Angle="180" />
							<TranslateTransform X="0" Y="0" />
						</TransformGroup>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsSelected" Value="False">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource TabItemUnselectedBrush}" />
				<Setter TargetName="Border" Property="Margin" Value="0,3,-1,0" />
				<Setter TargetName="Border" Property="CornerRadius" Value="2,2,0,0" />
				<Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
				<Setter TargetName="BorderTop" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter TargetName="Border" Property="Margin" Value="-1,0,-1,0" />
				<Setter TargetName="BorderTopLeft" Property="Opacity" Value="1" />
				<Setter TargetName="BorderRight" Property="Opacity" Value="1" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource WindowBrush}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected" Value="True" />
					<Condition Property="IsEnabled" Value="False" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter TargetName="BorderTopLeft" Property="Opacity" Value="0.25" />
					<Setter TargetName="BorderRight" Property="Opacity" Value="0.25" />
				</MultiTrigger.Setters>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True" />
					<Condition Property="IsSelected" Value="False" />
					<Condition Property="IsEnabled" Value="True" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter TargetName="MouseOverGrid" Property="Opacity" Value="1" />
				</MultiTrigger.Setters>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type TabItem}" d:IsControlPart="True" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource TabItemTemplate}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="{DynamicResource ButtonColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseBrush}" />
		<Setter Property="Height" Value="21" />
		<Setter Property="Width" Value="Auto" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
	</Style>
	<!-- Expander -->
	<ControlTemplate x:Key="ExpanderHeaderTemplate" TargetType="{x:Type ToggleButton}">
		<Grid x:Name="GridRoot">
			<Border x:Name="BackgroundNorm" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource LightBrush}" CornerRadius="0" />
			<Border x:Name="BackgroundNorm2" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource BaseBrush}" CornerRadius="0" />
			<Border Margin="1" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="0">
				<Grid Background="Transparent">
					<Grid.ColumnDefinitions>
						<ColumnDefinition x:Name="ColumnDefinition0" Width="20" />
						<ColumnDefinition x:Name="ColumnDefinition1" Width="*" />
					</Grid.ColumnDefinitions>
					<!--Grid.RowDefinitions>
						<RowDefinition x:Name="RowDefinition0" />
						<RowDefinition x:Name="RowDefinition1" Height="0" />
					</Grid.RowDefinitions-->
					<Grid MinHeight="20" MinWidth="20"> <!--Height="20" HorizontalAlignment="Left" VerticalAlignment="Top"-->
						<Path x:Name="Arrow" Grid.Column="0" Width="Auto" Height="Auto" RenderOptions.EdgeMode="Aliased" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M 8 -4 L 13 2 L 8 6 Z" />
					</Grid>
					<ContentPresenter x:Name="Header" Grid.Column="1" Margin="4,0,4,0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Left" VerticalAlignment="Center" IsHitTestVisible="False" />
				</Grid>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="Arrow" Property="Data" Value="M 6 -3 L 11 2 L 16 -3 Z" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="ExpanderHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource ExpanderHeaderTemplate}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="{DynamicResource ButtonDisabledSolidBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<ControlTemplate x:Key="ExpanderTemplate" TargetType="{x:Type Expander}">
		<Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="0">
			<DockPanel x:Name="DockPanel">
				<ToggleButton x:Name="HeaderSite" Margin="1" MinHeight="0" MinWidth="0" DockPanel.Dock="Top" Style="{StaticResource ExpanderHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
				<Border x:Name="Border" Margin="1,-1,1,0" Visibility="Collapsed" Background="{DynamicResource WindowBrush}" BorderThickness="0"  CornerRadius="0">
					<Border Margin="0" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource BaseBrush}" Background="{DynamicResource WindowBrush}" CornerRadius="0">
						<Border Margin="0" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource LightBrush}" CornerRadius="0">
							<Border Margin="0" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource LightBrush}" CornerRadius="0">
								<Border Margin="0" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource BaseBrush}" CornerRadius="0">
									<ContentPresenter x:Name="ExpandSite" Margin="2" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Border>
							</Border>
						</Border>
					</Border>
				</Border>
			</DockPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsExpanded" Value="True">
				<!--Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" /-->
				<Setter TargetName="Border" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
			<Trigger Property="ExpandDirection" Value="Down" />
			<Trigger Property="ExpandDirection" Value="Up">
				<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
				<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
				<Setter TargetName="Border" Property="Margin" Value="1,0,1,-1" />
			</Trigger>
			<Trigger Property="ExpandDirection" Value="Left">
				<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
				<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
				<Setter TargetName="Border" Property="Margin" Value="0,1,-1,1" />
			</Trigger>
			<Trigger Property="ExpandDirection" Value="Right">
				<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
				<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
				<Setter TargetName="Border" Property="Margin" Value="-1,1,0,1" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type Expander}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource ExpanderTemplate}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- TreeView / TreeViewItem -->
	<ControlTemplate x:Key="TreeViewToggleTemplate" TargetType="{x:Type ToggleButton}">
		<Grid SnapsToDevicePixels="True">
			<!--Path x:Name="ExpandPath" Width="Auto" Height="Auto" RenderOptions.EdgeMode="Aliased" Stretch="None" HorizontalAlignment="Center"  VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M 5 -3 L 10 3 L 5 7 Z" /-->
			<Image  x:Name="ExpandPath" Width="5" Height="9" RenderOptions.EdgeMode="Aliased" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{DynamicResource ArrowLeft}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<!--Setter  TargetName="ExpandPath" Property="Data"Value="M 2 -1 L 7 4 L 12 -1 Z" /-->
				<Setter  TargetName="ExpandPath" Property="Source" Value="{DynamicResource ArrowDown}" />
				<Setter  TargetName="ExpandPath" Property="Width" Value="9" />
				<Setter  TargetName="ExpandPath" Property="Height" Value="5" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="TreeViewToggleStyle" TargetType="ToggleButton">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource TreeViewToggleTemplate}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<ControlTemplate x:Key="TreeViewItemTemplate" TargetType="{x:Type TreeViewItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition MinWidth="16" Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition />
			</Grid.RowDefinitions>
			<Border x:Name="Bd" Grid.Column="0" Grid.ColumnSpan="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
			<ToggleButton x:Name="Expander" Grid.Column="0" Width="Auto" Height="Auto" Style="{StaticResource TreeViewToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
			<Border Grid.Column="1" Padding="{TemplateBinding Padding}">
				<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
			</Border>
			<ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsExpanded" Value="False">
				<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="HasItems" Value="False">
				<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="HasHeader" Value="False" />
					<Condition Property="Width" Value="Auto" />
				</MultiTrigger.Conditions>
				<Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="HasHeader" Value="False" />
					<Condition Property="Height" Value="Auto" />
				</MultiTrigger.Conditions>
				<Setter TargetName="PART_Header" Property="MinHeight" Value="20" />
			</MultiTrigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter TargetName="Bd" Property="Background" Value="{DynamicResource listboxItemSelectedBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource ButtonColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource TreeViewItemTemplate}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource radioBoxBorder1Brush}" />
		<Setter Property="BorderThickness" Value="0,1,1,0" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="IsExpanded" Value="True" />
		<Setter Property="Padding" Value="1,5,0,1" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<ControlTemplate x:Key="TreeViewTemplate" TargetType="{x:Type TreeView}">
		<ScrollViewer Margin="2" Style="{DynamicResource MayaScrollViewer}" Focusable="False" Background="{DynamicResource BaseBrush}" CanContentScroll="False" BorderThickness="0">
			<ItemsPresenter />
		</ScrollViewer>
	</ControlTemplate>
	<Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource TreeViewTemplate}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="Background" Value="{DynamicResource BaseBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="BorderBrush" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- Menu / ContextMenu / MenuItem -->
	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1" />
		<Setter Property="Margin" Value="5,0,5,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Separator">
					<Border Background="{DynamicResource WindowBrush}" BorderBrush="{DynamicResource editBoxBorderBrush}" BorderThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type MenuItem}">
		<Grid x:Name="GridRoot">
			<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
						<ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
						<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
						<ColumnDefinition x:Name="Col3" Width="14" />
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" Grid.Column="0" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
					<Grid x:Name="GlyphPanel" Grid.Column="0" Margin="4,0,6,0" VerticalAlignment="Center" Visibility="Hidden">
						<!--Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight" /-->

						<Border x:Name="CheckBox" Width="13" Height="13" BorderThickness="1" BorderBrush="{DynamicResource DarkBrush}" Background="{DynamicResource BorderBrush}" CornerRadius="1">
							<Path x:Name="CheckMark" RenderOptions.EdgeMode="Aliased" Width="11" Height="11" SnapsToDevicePixels="False" StrokeThickness="2" Stroke="{DynamicResource TextBrush}" Data="">
								<Path.Clip>
									<RectangleGeometry Rect="1,1,9,9" />
								</Path.Clip>
							</Path>
						</Border>

					</Grid>
					<ContentPresenter x:Name="HeaderHost" Grid.Column="1" Margin="{TemplateBinding Padding}"  RecognizesAccessKey="True" ContentSource="Header" />
					<ContentPresenter x:Name="IGTHost" Grid.Column="2" Margin="8,1,8,1" ContentSource="InputGestureText" VerticalAlignment="Center" />
					<Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
						<Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 Z" />
					</Grid>
					<Popup x:Name="SubMenuPopup" Placement="Right" HorizontalOffset="0" Focusable="False" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True">
						<Grid Margin="0,0,4,4" SnapsToDevicePixels="True">
							<Border x:Name="SubMenuBorder" BitmapEffect="{DynamicResource DropDownShadow}" BorderThickness="1" BorderBrush="{DynamicResource BaseBrush}" Background="{DynamicResource WindowBrush}" Margin="0">
								<Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0" />
								</Grid>
							</Border>
						</Grid>
					</Popup>
				</Grid>
			</Border>
			<Border x:Name="BorderTopLeft" Visibility="Collapsed" Margin="1" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource ButtonColorBrush}" />
			<Border x:Name="BorderBottomRight" Visibility="Collapsed" Margin="1" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource scrollbarStopColorBrush}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Margin" Value="0,0,3,0" />
				<Setter Property="Padding" Value="4,1,4,1" />
				<Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
				<Setter TargetName="SubMenuPopup" Property="HorizontalOffset" Value="-1" />
				<Setter TargetName="SubMenuPopup" Property="VerticalOffset" Value="1" />
				<Setter TargetName="Col0" Property="MinWidth" Value="0" />
				<Setter TargetName="Col3" Property="Width" Value="Auto" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Padding" Value="4,1,4,1" />
				<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="DockPanel.Dock" Value="Top" />
				<Setter Property="Padding" Value="0,2,0,2" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="DockPanel.Dock" Value="Top" />
				<Setter Property="Padding" Value="0,2,0,2" />
				<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsCheckable" Value="True">
				<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="CheckMark" Property="Data" Value="M 0 5 L 4 9 M 4 8 L 12 0" />
			</Trigger>
			<!--MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsCheckable" Value="True" />
					<Condition Property="IsChecked" Value="True" />
				</MultiTrigger.Conditions>
				<Setter TargetName="CheckMark" Property="Data" Value="M 0 5 L 4 9 M 4 8 L 12 0" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsCheckable" Value="True" />
					<Condition Property="IsChecked" Value="{x:Null}" />
				</MultiTrigger.Conditions>
				<Setter TargetName="CheckMark" Property="Data" Value="M 0 11 L 11 0" />
			</MultiTrigger-->
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True" />
					<Condition Property="Role" Value="TopLevelHeader" />
				</MultiTrigger.Conditions>
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BaseBrush}" />
				<Setter TargetName="BorderTopLeft" Property="Visibility" Value="Visible" />
				<Setter TargetName="BorderBottomRight" Property="Visibility" Value="Visible" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSubmenuOpen" Value="True" />
					<Condition Property="Role" Value="TopLevelHeader" />
				</MultiTrigger.Conditions>
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonPressedBrush}" />
				<Setter TargetName="BorderTopLeft" Property="Visibility" Value="Visible" />
				<Setter TargetName="BorderBottomRight" Property="Visibility" Value="Visible" />
				<Setter TargetName="BorderTopLeft" Property="BorderBrush" Value="{DynamicResource baseGradientStopColorBrush}" />
				<Setter TargetName="BorderBottomRight" Property="BorderBrush" Value="{DynamicResource buttonPressedGradientStartColorBrush}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True" />
					<Condition Property="Role" Value="SubmenuHeader" />
				</MultiTrigger.Conditions>
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource listboxItemSelectedBrush}" />
				<Setter Property="Foreground" Value="White" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsHighlighted" Value="True" />
					<Condition Property="Role" Value="SubmenuItem" />
				</MultiTrigger.Conditions>
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource listboxItemSelectedBrush}" />
				<Setter Property="Foreground" Value="White" />
			</MultiTrigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource MenuItemTemplate}" />
		<!--Setter Property="Background" Value="Transparent" /-->
		<!--Setter Property="Foreground" Value="{DynamicResource TextBrush}" /-->
		<Setter Property="BorderBrush" Value="{DynamicResource WindowBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<ControlTemplate x:Key="MenuTemplate" TargetType="{x:Type Menu}">
		<Grid>
			<Border x:Name="Border"  Margin="0" BorderBrush="Transparent" BorderThickness="0" />
			<StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Horizontal" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type Menu}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource MenuTemplate}" />
		<Setter Property="Background" Value="{DynamicResource WindowBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<ControlTemplate x:Key="ContextMenuTemplate" TargetType="{x:Type ContextMenu}">
		<Grid>
			<Border x:Name="Border"  Margin="0" BorderBrush="Transparent" BorderThickness="0" />
			<StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Vertical" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource ContextMenuTemplate}" />
		<Setter Property="Background" Value="{DynamicResource WindowBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- ListView / ListViewItem -->
	<ControlTemplate x:Key="ListViewItemTemplate" TargetType="{x:Type ListViewItem}">
		<Grid Background="{TemplateBinding Background}">
			<Border x:Name="Selection" Padding="2" SnapsToDevicePixels="True" Visibility="Collapsed" />
			<!-- This is used when GridView is put inside the ListView -->
			<GridViewRowPresenter Grid.RowSpan="2" Margin="5,1,5,2"
				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			<!-- This is used for ListView that does not use GridView -->
			<ContentPresenter x:Name="contentPresenter" Visibility="Collapsed"
				Content="{TemplateBinding ContentControl.Content}"
				ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
				Margin="{TemplateBinding Margin}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
				<Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="Selection" Property="Visibility" Value="Visible" />
				<Setter TargetName="Selection" Property="Background" Value="{DynamicResource listboxItemDisabledSelectedBrush}" />
			</Trigger>
			<Trigger Property="IsSelected" Value="true">
				<Setter TargetName="Selection" Property="Visibility" Value="Visible" />
				<Setter TargetName="Selection" Property="Background" Value="{DynamicResource listboxItemSelectedBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource TextDisabledBrush}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsEnabled" Value="False" />
					<Condition Property="IsSelected" Value="True" />
				</MultiTrigger.Conditions>
				<Setter Property="Foreground" Value="{DynamicResource ButtonColorBrush}" />
				<Setter TargetName="Selection" Property="Background" Value="{DynamicResource listboxItemDisabledSelectedBrush}" />
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style TargetType="{x:Type ListViewItem}">
		<Style.Resources>
			<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
				<!--Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
				<Setter Property="Background" Value="{DynamicResource WindowBrush}" /-->
				<Setter Property="BorderBrush" Value="{DynamicResource WindowBrush}" />
			</Style>
		</Style.Resources>
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource ListViewItemTemplate}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Margin" Value="2,0,0,0" />
	</Style>
	<Style TargetType="{x:Type ListView}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<!--Setter Property="OverridesDefaultStyle" Value="True" /-->
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="Background" Value="{DynamicResource BaseBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border Name="Border" BorderThickness="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2">
						<ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBorderLightColor}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- GridViewColumnHeader -->
	<Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
		<Setter Property="Width" Value="18" />
		<Setter Property="Background" Value="{DynamicResource BaseBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="GridViewColumnHeaderTemplate" TargetType="{x:Type GridViewColumnHeader}">
		<Grid>
			<Border x:Name="HeaderBorder" Background="{DynamicResource TabItemUnselectedBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1" Padding="0">
				<ContentPresenter x:Name="HeaderContent" Margin="0,0,0,1" RecognizesAccessKey="True"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</Border>
			<Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-9,0" Style="{DynamicResource GridViewColumnHeaderGripper}" />
		</Grid>
	</ControlTemplate>
	<Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource GridViewColumnHeaderTemplate}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Background" Value="{DynamicResource ButtonColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BaseBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- GridSplitter -->
	<ControlTemplate x:Key="GridSplitterTemplate" TargetType="{x:Type GridSplitter}">
		<Grid>
			<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
			<Border Margin="1" Background="{x:Null}" BorderBrush="{DynamicResource ButtonColorBrush}" BorderThickness="1,1,0,0" CornerRadius="2" />
		</Grid>
	</ControlTemplate>
	<Style TargetType="{x:Type GridSplitter}" BasedOn="{StaticResource CommonStyle}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template" Value="{DynamicResource GridSplitterTemplate}" />
		<Setter Property="Background" Value="{DynamicResource BaseBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<!-- Hyperlink -->
	<Style TargetType="{x:Type Hyperlink}">
		<Style.BasedOn>
			<Style TargetType="{x:Type Hyperlink}">
				<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
				<Setter Property="TextDecorations" Value="Underline" />
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Foreground" Value="{DynamicResource ActiveHoverBrush1}" />
					</Trigger>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Foreground" Value="{DynamicResource InactiveNoHoverBrush}" />
					</Trigger>
					<Trigger Property="IsEnabled" Value="True">
						<Setter Property="Cursor" Value="Hand" />
					</Trigger>
				</Style.Triggers>
			</Style>
		</Style.BasedOn>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Foreground" Value="{DynamicResource ActiveHoverBrush1}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource InactiveNoHoverBrush}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!-- Tooltips -->
	<Style TargetType="{x:Type ToolTip}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="HasDropShadow" Value="True" />
		<Setter Property="Foreground" Value="{DynamicResource BorderBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Border Name="Border" Background="{DynamicResource tooltipsBrush}"
							BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}"
							Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
						<ContentPresenter Margin="4" HorizontalAlignment="Left" VerticalAlignment="Top" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow" Value="True">
							<Setter TargetName="Border" Property="CornerRadius" Value="4" />
							<Setter TargetName="Border" Property="SnapsToDevicePixels" Value="True" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
</ResourceDictionary>
